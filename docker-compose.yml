version: '3.8'

services:
  # Frontend (Vite dev server)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:5000
    depends_on:
      - backend
    networks:
      - modelshare-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/modelshare
      - JWT_SECRET=dev-secret-key-change-in-production
      - AWS_ACCESS_KEY_ID=dev-key
      - AWS_SECRET_ACCESS_KEY=dev-secret
      - AWS_REGION=us-east-1
      - AWS_S3_BUCKET=dev-bucket
    depends_on:
      - postgres
      - redis
    networks:
      - modelshare-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=modelshare
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database-schema.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - modelshare-network

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - modelshare-network

  # MinIO for local S3-compatible storage
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - modelshare-network

  # Worker for background jobs
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    command: npm run worker
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/modelshare
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - modelshare-network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  modelshare-network:
    driver: bridge
